import asyncio
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
from database.models import Database
from key.key import TOKEN
from parsers.strikeplanet_parser import StrikePlanetParser
from parsers.airsoftrus_parser import AirsoftRusParser
from handlers.admin import AdminHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


class AirsoftBot:
    def __init__(self, token: str):
        self.token = token
        self.db = Database()
        self.admin_handler = AdminHandler(self.db)

        # ID —Ç–æ–ø–∏–∫–æ–≤ –≤ Telegram
        self.PRICE_TOPIC_ID = 5  # https://t.me/c/airsoft_guide/5
        self.ORDER_TOPIC_ID = 6  # https://t.me/c/airsoft_guide/6

        # ID –≥—Ä—É–ø–ø—ã (–Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
        self.GROUP_CHAT_ID = -1001234567890  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω –Ω–∞ airsoft —à–∞—Ä—ã.")

    async def update_prices(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω"""
        user_id = update.effective_user.id

        if not await self.admin_handler.is_admin(user_id):
            await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return

        await update.message.reply_text("–ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω...")

        try:
            # –ü–∞—Ä—Å–∏–º —Ü–µ–Ω—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
            strike_parser = StrikePlanetParser()
            airsoft_parser = AirsoftRusParser()

            strike_products = strike_parser.parse_products()
            airsoft_products = airsoft_rus_parser.parse_products()

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
            conn = self.db.get_connection()
            cursor = conn.cursor()

            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
            cursor.execute("DELETE FROM competitor_products")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            for product in strike_products + airsoft_products:
                cursor.execute(
                    "INSERT INTO competitor_products (name, price, competitor, url) VALUES (%s, %s, %s, %s)",
                    (product['name'], product['price'], product['competitor'], product['url'])
                )

            conn.commit()
            cursor.close()
            conn.close()

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–æ–ø–∏–∫–∞
            message = "üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –¶–ï–ù –ö–û–ù–ö–£–†–ï–ù–¢–û–í\n\n"

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã StrikePlanet
            message += "üéØ StrikePlanet:\n"
            for product in strike_products[:5]:  # –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤
                message += f"‚Ä¢ {product['name']}: {product['price']} —Ä—É–±.\n"

            message += "\nüéØ Airsoft-Rus:\n"
            for product in airsoft_products[:5]:  # –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤
                message += f"‚Ä¢ {product['name']}: {product['price']} —Ä—É–±.\n"

            message += f"\nüì¶ –ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ã: https://t.me/c/airsoft_guide/{self.ORDER_TOPIC_ID}"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ç–æ–ø–∏–∫
            await context.bot.send_message(
                chat_id=self.GROUP_CHAT_ID,
                message_thread_id=self.PRICE_TOPIC_ID,
                text=message
            )

            await update.message.reply_text("–¶–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã!")

        except Exception as e:
            logger.error(f"Error updating prices: {e}")
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω.")

    async def admin_panel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        user_id = update.effective_user.id

        if not await self.admin_handler.is_admin(user_id):
            await update.message.reply_text("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
            return

        keyboard = await self.admin_handler.get_admin_keyboard()
        await update.message.reply_text(
            "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
            reply_markup=keyboard
        )

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        application = Application.builder().token(self.token).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", self.start))
        application.add_handler(CommandHandler("update", self.update_prices))
        application.add_handler(CommandHandler("admin", self.admin_panel))
        application.add_handler(CallbackQueryHandler(self.admin_handler.handle_callback))

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling()


if __name__ == "__main__":
    # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
    BOT_TOKEN = TOKEN

    bot = AirsoftBot(BOT_TOKEN)
    bot.run()